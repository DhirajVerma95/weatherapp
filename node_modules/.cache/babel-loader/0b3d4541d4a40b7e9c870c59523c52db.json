{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML\\\\React Projects\\\\New folder\\\\weather\\\\src\\\\components\\\\WeatherComponent.js\";\nimport React from 'react';\nimport \"./WeatherComponent.css\";\nimport { WeatherIcons } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WeatherInfoIcon = {\n  sunset: \"../images/night.svg\",\n  sunrise: \"../images/day.svg\",\n  wind: \"../images/wind.svg\",\n  pressure: \"../images/pressure.svg\",\n  temp: \"../images/temp.svg\",\n  humidity: \"../images/humidity.svg\",\n  haze: \"../images/huze.svg\",\n  rain: \"../images/rain.svg\",\n  snow: \"../images/snow.svg\"\n};\n\nconst WeatherInfoComponent = props => {\n  const {\n    name,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infocontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoicon\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: WeatherInfoIcon[name],\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 39\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infolable\",\n        children: [value, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = WeatherInfoComponent;\n\nconst WeatherComponent = props => {\n  var _weather$weather$0$ic, _weather$main, _weather$sys, _weather$main2, _weather$wind, _weather$main3;\n\n  const {\n    weather\n  } = props;\n  const condition = weather === null || weather === void 0 ? void 0 : weather.weather[0].description;\n  const isDay = weather === null || weather === void 0 ? void 0 : (_weather$weather$0$ic = weather.weather[0].icon) === null || _weather$weather$0$ic === void 0 ? void 0 : _weather$weather$0$ic.includes('d');\n\n  const getTime = timeStamp => {\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-weather-temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [`${Math.floor((weather === null || weather === void 0 ? void 0 : (_weather$main = weather.main) === null || _weather$main === void 0 ? void 0 : _weather$main.temp) - 273)} Â°C`, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }, this), \" | \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", `${weather === null || weather === void 0 ? void 0 : weather.weather[0].description}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 83\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: WeatherInfoIcon[condition]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-weather-location\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `${weather === null || weather === void 0 ? void 0 : weather.name} , ${weather === null || weather === void 0 ? void 0 : (_weather$sys = weather.sys) === null || _weather$sys === void 0 ? void 0 : _weather$sys.country}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: isDay ? \"sunset\" : \"sunrise\",\n          value: `${getTime(weather === null || weather === void 0 ? void 0 : weather.sys[isDay ? \"sunset\" : \"sunrise\"])}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: \"humidity\",\n          value: weather === null || weather === void 0 ? void 0 : (_weather$main2 = weather.main) === null || _weather$main2 === void 0 ? void 0 : _weather$main2.humidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: \"wind\",\n          value: weather === null || weather === void 0 ? void 0 : (_weather$wind = weather.wind) === null || _weather$wind === void 0 ? void 0 : _weather$wind.speed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfoComponent, {\n          name: \"pressure\",\n          value: weather === null || weather === void 0 ? void 0 : (_weather$main3 = weather.main) === null || _weather$main3 === void 0 ? void 0 : _weather$main3.pressure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = WeatherComponent;\nexport default WeatherComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WeatherInfoComponent\");\n$RefreshReg$(_c2, \"WeatherComponent\");","map":{"version":3,"sources":["D:/HTML/React Projects/New folder/weather/src/components/WeatherComponent.js"],"names":["React","WeatherIcons","WeatherInfoIcon","sunset","sunrise","wind","pressure","temp","humidity","haze","rain","snow","WeatherInfoComponent","props","name","value","WeatherComponent","weather","condition","description","isDay","icon","includes","getTime","timeStamp","Date","getHours","getMinutes","Math","floor","main","sys","country","speed"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"./WeatherComponent.css\";\r\nimport { WeatherIcons } from '../App';\r\n\r\n\r\nexport const WeatherInfoIcon = {\r\n    sunset : \"../images/night.svg\",\r\n    sunrise : \"../images/day.svg\",\r\n    wind : \"../images/wind.svg\",\r\n    pressure : \"../images/pressure.svg\",\r\n    temp :  \"../images/temp.svg\",\r\n    humidity : \"../images/humidity.svg\",\r\n    haze : \"../images/huze.svg\",\r\n    rain : \"../images/rain.svg\",\r\n    snow : \"../images/snow.svg\"\r\n}\r\n\r\n\r\nconst WeatherInfoComponent = (props) =>{\r\n    const {name , value} = props;\r\n    return(\r\n        <>\r\n        <div className='infocontainer'>\r\n            <div className='infoicon'><img src={WeatherInfoIcon[name]} alt={name}></img> </div>\r\n            <div className='infolable'>\r\n                {value}\r\n                <span>{name}</span>\r\n            </div>\r\n        </div>\r\n        \r\n        </>\r\n    );\r\n}\r\nconst WeatherComponent = (props) => {\r\n    const {weather} = props;\r\n    const condition = weather?.weather[0].description ;\r\n    const isDay = weather?.weather[0].icon?.includes('d')\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n    }\r\n    return (\r\n        <>\r\n        <div className='app-weather'>\r\n            <h1>Weather Details</h1>\r\n        \r\n        <div className='app-weather-temp'>\r\n        <h1> <span>{`${Math.floor(weather?.main?.temp- 273)} Â°C`} </span> | </h1> <p> {`${weather?.weather[0].description}`}</p> \r\n        <img src={WeatherInfoIcon[condition]}/> \r\n\r\n        </div>\r\n        \r\n        <div className='app-weather-location'>\r\n            <h1>{`${weather?.name} , ${weather?.sys?.country}`}</h1>\r\n        </div>\r\n        <div>\r\n            <WeatherInfoComponent name= {isDay ? \"sunset\" : \"sunrise\"}   \r\n              value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\r\n            <WeatherInfoComponent name= \"humidity\"   value = {weather?.main?.humidity}/>\r\n            <WeatherInfoComponent name= \"wind\"   value = {weather?.wind?.speed}/>\r\n            <WeatherInfoComponent name= \"pressure\"   value = {weather?.main?.pressure}/>\r\n        </div>\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherComponent\r\n"]},"metadata":{},"sourceType":"module"}